//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ActivityLibrary35 {
    using System;
    using System.ComponentModel;
    using System.Workflow.Activities;
    using System.Workflow.ComponentModel;
    using System.Workflow.ComponentModel.Design;
    using System.Workflow.ComponentModel.Compiler;
    
    
    [ToolboxItemAttribute(typeof(ActivityToolboxItem))]
    public partial class GuessReceived : HandleExternalEventActivity {
        
        public static DependencyProperty EProperty = DependencyProperty.Register("E", typeof(ActivityLibrary35.GuessReceivedEventArgs), typeof(GuessReceived));
        
        public GuessReceived() {
            base.InterfaceType = typeof(ActivityLibrary35.IGuessingGame);
            base.EventName = "GuessReceived";
        }
        
        [BrowsableAttribute(false)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        public override System.Type InterfaceType {
            get {
                return base.InterfaceType;
            }
            set {
                throw new InvalidOperationException("Cannot set InterfaceType on a derived HandleExternalEventActivity.");
            }
        }
        
        [BrowsableAttribute(false)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        public override string EventName {
            get {
                return base.EventName;
            }
            set {
                throw new InvalidOperationException("Cannot set EventName on a derived HandleExternalEventActivity.");
            }
        }
        
        [ValidationOptionAttribute(ValidationOption.Required)]
        public ActivityLibrary35.GuessReceivedEventArgs E {
            get {
                return ((ActivityLibrary35.GuessReceivedEventArgs)(this.GetValue(GuessReceived.EProperty)));
            }
            set {
                this.SetValue(GuessReceived.EProperty, value);
            }
        }
        
        protected override void OnInvoked(System.EventArgs e) {
            this.E = ((ActivityLibrary35.GuessReceivedEventArgs)(e));
        }
    }
}
