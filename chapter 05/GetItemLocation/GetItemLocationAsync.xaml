<!--
 This file is part of the downloadable code for the Apress book:
 Pro WF: Windows Workflow in .NET 4.0
 Copyright (c) Bruce Bukovics.  All rights reserved.

 This code is provided as is without warranty of any kind, either expressed
 or implied, including but not limited to fitness for any particular purpose.
 You may use the code for any commercial or noncommercial purpose, and combine
 it with your own code, but cannot reproduce it in whole or in part for
 publication purposes without prior approval.
 -->
<Activity mc:Ignorable="sap" x:Class="GetItemLocation.GetItemLocationAsync" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:a="clr-namespace:ActivityLibrary;assembly=ActivityLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:s1="clr-namespace:System;assembly=mscorlib" xmlns:s2="clr-namespace:System;assembly=System" xmlns:s3="clr-namespace:System;assembly=System.Xml" xmlns:s4="clr-namespace:System;assembly=System.Core" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ArgItemId" Type="InArgument(x:Int32)" />
    <x:Property Name="ArgQuantity" Type="InArgument(x:Int32)" />
    <x:Property Name="ArgQuantityFound" Type="OutArgument(x:Int32)" />
    <x:Property Name="ArgWarehouseIdFound" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Parallel sad:XamlDebuggerXmlReader.FileName="C:\WF\WindowsWorkflowWork\code\chapter 05\GetItemLocation\GetItemLocationAsync.xaml" sap:VirtualizedContainerService.HintSize="794,200" CompletionCondition="[ArgQuantityFound = ArgQuantity]">
    <Sequence DisplayName="Warehouse1" sap:VirtualizedContainerService.HintSize="200,52">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="WarehouseQty" />
        <Variable x:TypeArguments="x:Int32" Default="1" Name="WarehouseId" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} InventoryLookupAsync&quot;, WarehouseId)]" />
      <a:InventoryLookupAsync sap:VirtualizedContainerService.HintSize="211,22" ItemId="[ArgItemId]" RequestedQty="[ArgQuantity]" Result="[WarehouseQty]" WarehouseId="[WarehouseId]" />
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} If&quot;, WarehouseId)]" />
      <If Condition="[WarehouseQty = ArgQuantity And ArgQuantityFound = 0]" sap:VirtualizedContainerService.HintSize="211,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="301,280">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgQuantityFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseQty]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgWarehouseIdFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseId]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Warehouse2" sap:VirtualizedContainerService.HintSize="200,52">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="WarehouseQty" />
        <Variable x:TypeArguments="x:Int32" Default="2" Name="WarehouseId" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} InventoryLookupAsync&quot;, WarehouseId)]" />
      <a:InventoryLookupAsync sap:VirtualizedContainerService.HintSize="211,22" ItemId="[ArgItemId]" RequestedQty="[ArgQuantity]" Result="[WarehouseQty]" WarehouseId="[WarehouseId]" />
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} If&quot;, WarehouseId)]" />
      <If Condition="[WarehouseQty = ArgQuantity And ArgQuantityFound = 0]" sap:VirtualizedContainerService.HintSize="211,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="301,280">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgQuantityFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseQty]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgWarehouseIdFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseId]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Warehouse3" sap:VirtualizedContainerService.HintSize="200,52">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="WarehouseQty" />
        <Variable x:TypeArguments="x:Int32" Default="3" Name="WarehouseId" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} InventoryLookupAsync&quot;, WarehouseId)]" />
      <a:InventoryLookupAsync sap:VirtualizedContainerService.HintSize="211,22" ItemId="[ArgItemId]" RequestedQty="[ArgQuantity]" Result="[WarehouseQty]" WarehouseId="[WarehouseId]" />
      <WriteLine sap:VirtualizedContainerService.HintSize="211,62" Text="[String.Format(&quot;Warehouse {0} If&quot;, WarehouseId)]" />
      <If Condition="[WarehouseQty = ArgQuantity And ArgQuantityFound = 0]" sap:VirtualizedContainerService.HintSize="211,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="301,280">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgQuantityFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseQty]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="242,58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ArgWarehouseIdFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WarehouseId]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
  </Parallel>
</Activity>