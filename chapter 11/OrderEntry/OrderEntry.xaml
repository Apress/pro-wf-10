<!--
 This file is part of the downloadable code for the Apress book:
 Pro WF: Windows Workflow in .NET 4.0
 Copyright (c) Bruce Bukovics.  All rights reserved.

 This code is provided as is without warranty of any kind, either expressed
 or implied, including but not limited to fitness for any particular purpose.
 You may use the code for any commercial or noncommercial purpose, and combine
 it with your own code, but cannot reproduce it in whole or in part for
 publication purposes without prior approval.
 -->
<Activity mc:Ignorable="sap" x:Class="OrderEntry.OrderEntry" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:a="clr-namespace:ActivityLibrary;assembly=ActivityLibrary" xmlns:local="clr-namespace:ActivityLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Items" Type="OutArgument(scg:List(local:Item))" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1066,1240</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces for internal implementation</mva:VisualBasic.Settings>
  <Sequence sad:XamlDebuggerXmlReader.FileName="C:\WF\WindowsWorkflowWork\code\chapter 10\OrderEntry\OrderEntry.xaml" sap:VirtualizedContainerService.HintSize="1026,1200">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1004,58">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(local:Item)">[Items]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(local:Item)">[New List(Of ActivityLibrary.Item)]</InArgument>
      </Assign.Value>
    </Assign>
    <While sap:VirtualizedContainerService.HintSize="1004,978">
      <While.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="IsDone" />
      </While.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <While.Condition>[Not IsDone]</While.Condition>
      <Pick sap:VirtualizedContainerService.HintSize="978,862">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <PickBranch DisplayName="AddItem" sap:VirtualizedContainerService.HintSize="552,816">
          <PickBranch.Variables>
            <Variable x:TypeArguments="local:Item" Name="Item" />
            <Variable x:TypeArguments="x:Boolean" Name="IsInventoryOK" />
          </PickBranch.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <PickBranch.Trigger>
            <local:WaitForAddItem sap:VirtualizedContainerService.HintSize="522,100" Result="[Item]" />
          </PickBranch.Trigger>
          <Sequence sap:VirtualizedContainerService.HintSize="522,598">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <local:CheckInventory sap:VirtualizedContainerService.HintSize="500,22" ItemId="[Item.ItemId]" Quantity="[Item.Quantity]" Result="[IsInventoryOK]" />
            <If Condition="[IsInventoryOK]" sap:VirtualizedContainerService.HintSize="500,412">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="264,306">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <local:GetItemPrice sap:VirtualizedContainerService.HintSize="242,22" ItemId="[Item.ItemId]" Result="[Item.UnitPrice]" />
                  <Assign sap:VirtualizedContainerService.HintSize="242,58">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Decimal">[Item.TotalPrice]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Decimal">[Item.UnitPrice * Item.Quantity]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <AddToCollection x:TypeArguments="local:Item" Collection="[Items]" DisplayName="AddToCollection&lt;Item&gt;" sap:VirtualizedContainerService.HintSize="242,22" Item="[Item]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <WriteLine sap:VirtualizedContainerService.HintSize="211,306" Text="[String.Format(&quot;Quantity of {0} for Item {1} is unavailable&quot;, Item.Quantity, Item.ItemId)]" />
              </If.Else>
            </If>
          </Sequence>
        </PickBranch>
        <PickBranch DisplayName="OrderComplete" sap:VirtualizedContainerService.HintSize="272,816">
          <PickBranch.Trigger>
            <local:WaitForOrderComplete sap:VirtualizedContainerService.HintSize="242,100" />
          </PickBranch.Trigger>
          <Assign sap:VirtualizedContainerService.HintSize="242,100">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[IsDone]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </PickBranch>
      </Pick>
    </While>
  </Sequence>
</Activity>